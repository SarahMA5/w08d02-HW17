{"version":3,"sources":["FilmPoster.js","Fave.js","FilmRow.js","FilmListing.js","FilmBackdrop.js","FilmDetails.js","TMDB.js","App.js","index.js"],"names":["FilmPoster","props","posterURl","poster","react_default","a","createElement","className","class","src","alt","Fave","e","stopPropagation","console","log","this","onFaveToggle","_this","isFave","status","onClick","handleClick","Component","FilmRow","onDetailsToggle","filmTitle","year","src_Fave","FilmListing","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","filter","chosenList","films","display","faves","setState","_this2","allFilms","map","film","index","_React$createElement","key","title","Date","release_date","getFullYear","poster_path","defineProperty","id","includes","concat","handleFilterClick","length","FilmBackdrop","FilmDetails","current","backdrop_path","overview","TMDB","api_key","App","handleFaveToggle","bind","assertThisInitialized","handleDetailsClick","slice","filmIndex","indexOf","push","splice","src_FilmListing","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e6f76cc9.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nexport default function FilmPoster(props) {\r\n\r\n    let posterURl = \"https://image.tmdb.org/t/p/w780\" + props.poster;\r\n\r\n    return (\r\n        <img className={props.class} src={posterURl} alt=\"\" />\r\n    )\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Fave extends Component {\r\n\r\n    handleClick(e) {\r\n        e.stopPropagation()\r\n        console.log(\"handling Fave click!\")\r\n        this.props.onFaveToggle()\r\n    }\r\n\r\n    render() {\r\n        const isFave = (this.props.isFave) ? 'film-row-fave remove_from_queue' : 'film-row-fave add_to_queue'\r\n        const status = (this.props.isFave) ? 'remove_from_queue' : 'add_to_queue'\r\n        return (\r\n            <div className={isFave}>\r\n                <p onClick={(e) => this.handleClick(e)} className=\"material-icons\">{status}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Fave;","import React from 'react';\r\nimport FilmPoster from './FilmPoster';\r\nimport Fave from './Fave';\r\n\r\nexport default function FilmRow(props) {\r\n\r\n    return (\r\n        <div className=\"film-row\" >\r\n            {/* pass the value of the film poster to FilmPoster component which will take care of rendering the poster */}\r\n            <FilmPoster poster={props.poster} />\r\n            {/* add onDetailsToggle() method passed through FilmListing Component to onClick event */}\r\n            <div className=\"film-summary\" onClick={() => props.onDetailsToggle(props)}>\r\n                <h1>{props.filmTitle}</h1>\r\n                <p>{props.year}</p>\r\n            </div>\r\n            {/* pass onFaveToggle() as props to the Fave component along with the state (as props) of whether the film is among the list of favorite films */}\r\n            <Fave onFaveToggle={() => props.onFaveToggle(props)}\r\n            isFave={props.isFave} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport FilmRow from './FilmRow';\r\n\r\nclass FilmListing extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filter: 'all', //filter decides which one of the two lists of films (all, favorite) should be displayed. \r\n            chosenList: this.props.films //chosen list to be displayed. Again, determined by the previously defined state 'filter'\r\n        }\r\n    }\r\n\r\n    handleFilterClick(filter) {\r\n        console.log(\"Setting filter to \" + filter)\r\n\r\n        //a variable to hold the value of the list to be displayed, based on the filter value passed to the method through on click event.\r\n        var display = '' \r\n        if (filter == 'fave') {\r\n            display = this.props.faves\r\n        }\r\n        else {\r\n            display = this.props.films\r\n        }\r\n\r\n        //Update the states of the filter and the list, as a handle to the event of clicking on the filter name.\r\n        this.setState({\r\n            filter: filter,\r\n            chosenList: display\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.films)\r\n        //Use a map function to display each film in a row using FilmRow component.\r\n\r\n        let allFilms = (this.state.chosenList).map((film, index) => (\r\n\r\n            <FilmRow key={index}\r\n                filmTitle={film.title}\r\n                year={(new Date(film.release_date)).getFullYear()} //Used the method .getFullYear() to get the year only out of the full date.\r\n                poster={film.poster_path}\r\n                key={film.id}\r\n                onFaveToggle={() => this.props.onFaveToggle(film)} //Pass onFaveToggle() method already passed from App.js to the film row.\r\n                isFave={(this.props.faves).includes(film)} //Pass a boolean value of wether or not this film is already in favorite films list.\r\n                onDetailsToggle={() => this.props.onDetailsToggle(film)}/> //Pass onDetailsToggle() method existing in App.js to the film row.\r\n                //to handle changing the film details section of the page to the details of the film exsiting in that row.\r\n        ));\r\n\r\n        return (\r\n            //I removed the class film-list\" from the first div because it was adding extra space\r\n            // before the list of film rows\r\n            <div>\r\n                <h1 className=\"section-title\"></h1>\r\n                \r\n                {/* //Handling filter clicks, switching between the list of all films and the list of favorite films */}\r\n                <div className=\"film-list-filters\">\r\n                    <div className={`film-list-filter ${this.state.filter === 'all' ? 'is-active' : ''}`} onClick={() => this.handleFilterClick('all')}>\r\n                        ALL\r\n            <span className=\"section-count\">{this.props.films.length}</span>\r\n                    </div>\r\n                    <div className={`film-list-filter ${this.state.filter === 'fave' ? 'is-active' : ''}`} onClick={() => this.handleFilterClick('fave')}>\r\n                        FAVES\r\n            {/* //Update the hard-coded counter to a dynamic one using the length of favorite films, which keeps updating */}\r\n            <span className=\"section-count\">{(this.props.faves).length}</span>\r\n                    </div>\r\n                </div>\r\n                {/* //render the list of all film rows */}\r\n                        {allFilms} \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FilmListing;","import React from 'react';\r\n\r\nexport default function FilmBackdrop(props) {\r\n\r\n    let posterURl = \"https://image.tmdb.org/t/p/w1280/\" + props.poster;\r\n\r\n    return (\r\n        <img src={posterURl} alt= \"\" />\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport FilmBackdrop from './FilmBackdrop'\r\nimport FilmPoster from './FilmPoster';\r\n\r\nexport default function FilmDetails(props) {\r\n\r\n    return (\r\n        <div className=\"film-detail is-hydrated\">\r\n            <div className=\"film-backdrop\">\r\n                <figure className=\"film-backdrop\">\r\n                    <FilmBackdrop poster={props.current.backdrop_path} />\r\n                    <h1 className=\"film-title\">{props.current.title}</h1>\r\n                </figure>\r\n                <div className=\"film-meta\">\r\n                    <p className=\"film-detail-overview\">\r\n                        <FilmPoster class={\"film-detail-poster\"} poster={props.current.poster_path} />\r\n                        {props.current.overview}\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","const TMDB = {\r\n  api_key: '<REPLACE_THIS_WITH_TMDB_API_KEY>',\r\n  films: [\r\n    {\r\n      \"id\": 346364,\r\n      \"title\": \"It\",\r\n      \"poster_path\": \"/9E2y5Q7WlCVNEhP5GiVTjhEhx1o.jpg\",\r\n      \"backdrop_path\": \"/tcheoA2nPATCm2vvXw2hVQoaEFD.jpg\",\r\n      \"overview\": \"In a small town in Maine, seven children known as The Losers Club come face to face with life problems, bullies and a monster that takes the shape of a clown called Pennywise.\",\r\n      \"release_date\": \"2017-09-05\"\r\n    },\r\n    {\r\n      \"id\": 343668,\r\n      \"title\": \"Kingsman: The Golden Circle\",\r\n      \"poster_path\": \"/pKESfn2Pdy0b7drvZHQb7UzgqoY.jpg\",\r\n      \"backdrop_path\": \"/uExPmkOHJySrbJyJDJylHDqaT58.jpg\",\r\n      \"overview\": \"When an attack on the Kingsman headquarters takes place and a new villain rises, Eggsy and Merlin are forced to work together with the American agency known as the Statesman to save the world.\",\r\n      \"release_date\": \"2017-09-20\"\r\n    },\r\n    {\r\n      \"id\": 339403,\r\n      \"title\": \"Baby Driver\",\r\n      \"poster_path\": \"/dN9LbVNNZFITwfaRjl4tmwGWkRg.jpg\",\r\n      \"backdrop_path\": \"/goCvLSUFz0p7k8R10Hv4CVh3EQv.jpg\",\r\n      \"overview\": \"After being coerced into working for a crime boss, a young getaway driver finds himself taking part in a heist doomed to fail.\",\r\n      \"release_date\": \"2017-06-28\"\r\n    },\r\n    {\r\n      \"id\": 335984,\r\n      \"title\": \"Blade Runner 2049\",\r\n      \"poster_path\": \"/cbRQVCia0urtv5UGsVFTdqLDIRv.jpg\",\r\n      \"backdrop_path\": \"/zfWPeRgYpRjPZLGwwkfnTfaFnNh.jpg\",\r\n      \"overview\": \"Thirty years after the events of the first film, a new blade runner, LAPD Officer K, unearths a long-buried secret that has the potential to plunge what's left of society into chaos. K's discovery leads him on a quest to find Rick Deckard, a former LAPD blade runner who has been missing for 30 years.\",\r\n      \"release_date\": \"2017-10-04\"\r\n    },\r\n    {\r\n      \"id\": 381283,\r\n      \"title\": \"mother!\",\r\n      \"poster_path\": \"/qmi2dsuoyzZdJ0WFZYQazbX8ILj.jpg\",\r\n      \"backdrop_path\": \"/uuQpQ8VDOtVL2IO4y2pR58odkS5.jpg\",\r\n      \"overview\": \"A couple's relationship is tested when uninvited guests arrive at their home, disrupting their tranquil existence.\",\r\n      \"release_date\": \"2017-09-13\"\r\n    },\r\n    {\r\n      \"id\": 374720,\r\n      \"title\": \"Dunkirk\",\r\n      \"poster_path\": \"/bOXBV303Fgkzn2K4FeKDc0O31q4.jpg\",\r\n      \"backdrop_path\": \"/fudEG1VUWuOqleXv6NwCExK0VLy.jpg\",\r\n      \"overview\": \"The miraculous evacuation of Allied soldiers from Belgium, Britain, Canada and France, who were cut off and surrounded by the German army from the beaches and harbor of Dunkirk, France, between May 26th and June 4th 1940, during the Battle of France in World War II.\",\r\n      \"release_date\": \"2017-07-19\"\r\n    },\r\n    {\r\n      \"id\": 415842,\r\n      \"title\": \"American Assassin\",\r\n      \"poster_path\": \"/o40BAqdTQHiN3cUfpgieDUYI71z.jpg\",\r\n      \"backdrop_path\": \"/puKZWmBIpuEMwGCn2hZkublG1rO.jpg\",\r\n      \"overview\": \"Following the murder of his fiancée, Mitch Rapp trains under the instruction of Cold War veteran Stan Hurley. The pair then is enlisted to investigate a wave of apparently random attacks on military and civilian targets.\",\r\n      \"release_date\": \"2017-09-14\"\r\n    },\r\n    {\r\n      \"id\": 390043,\r\n      \"title\": \"The Hitman's Bodyguard\",\r\n      \"poster_path\": \"/5CGjlz2vyBhW5xHW4eNOZIdgzYq.jpg\",\r\n      \"backdrop_path\": \"/7KsqfXDECZMryX1Rv4RKsT7SIjQ.jpg\",\r\n      \"overview\": \"The world's top bodyguard gets a new client, a hit man who must testify at the International Court of Justice. They must put their differences aside and work together to make it to the trial on time.\",\r\n      \"release_date\": \"2017-08-16\"\r\n    },\r\n    {\r\n      \"id\": 316154,\r\n      \"title\": \"The Bad Batch\",\r\n      \"poster_path\": \"/7o14VaMphEIzPwzeW6FP3A6zb4W.jpg\",\r\n      \"backdrop_path\": \"/aQ06MnEDLh9X3ZOtY21UD2XB197.jpg\",\r\n      \"overview\": \"In a desert wasteland in Texas, a muscled cannibal breaks one important rule: don’t play with your food.\",\r\n      \"release_date\": \"2017-06-23\"\r\n    }\r\n  ]\r\n}\r\n\r\nexport default TMDB;\r\n","import React, { Component } from 'react';\nimport FilmListing from './FilmListing';\nimport FilmDetails from './FilmDetails';\nimport TMDB from './TMDB';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      films: TMDB.films, //set the films state property to the array of films in TMDB.js file.\n      faves: [], //will be used to add and group favorite films.\n      current: TMDB.films[0] //ss an initial state, set the current film to the first one on the list (to display details about it).\n    }\n\n    this.handleFaveToggle = this.handleFaveToggle.bind(this)\n    this.handleDetailsClick = this.handleDetailsClick.bind(this)\n  }\n\n  handleFaveToggle(film) { //film will be passed to it.\n    const faves = (this.state.faves).slice() //make a copy of the current array of favorite films 'fave'\n    const filmIndex = faves.indexOf(film) //check if the film already exists in the array of favorite films.\n\n    if (filmIndex === -1) { //if the film does not exits in the array, push it to the 'faves' array we made above.\n      console.log(\"Adding \" + film.title + \" to faves\")\n      faves.push(film)\n    }\n    else { //if the film already exists in the array, remove it from the list of favorites using Array.splice() method.\n      console.log(\"Removing \" + film.title + \" from faves\")\n      faves.splice(filmIndex, 1)\n    }\n    this.setState({ faves }) //update the state of the array of favorites using the copy of the array we updated earlier.\n  }\n\n  handleDetailsClick(film) { //will be used to update the 'current' state\n    console.log(\"Fetching details for \" + film.title)\n    this.setState({ current: film })\n    //change the film details section to the film represented in the film row we just clicked on.\n  }\n\n  render() {\n\n    return (\n      <div className=\"film-library\">\n        <div className=\"film-list\">\n          <h1 className=\"section-title\">FILMS</h1>\n\n          {/* for Display the list of all films by rendering a FilmListing component and sending the states of: films list (films),\n          favorite films list (faves) and both handleFaveToggle() and handleDetailsClick() methods as props to it, either to be used by it or to be passed \n          down to another component */}\n\n          <FilmListing films={this.state.films}\n            faves={this.state.faves}\n            onFaveToggle={(e) => this.handleFaveToggle(e)}\n            onDetailsToggle={(e) => this.handleDetailsClick(e)} />\n        </div>\n\n        {/* for FilmDetails component, pass the state representing the list of films (films) and\n        the state holding the value of the current film to display its details (current), as props to that component. */}\n\n        <div className=\"film-details\">\n          <h1 className=\"section-title\">DETAILS</h1>\n          <FilmDetails films={this.state.films}\n            current={this.state.current} />\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}